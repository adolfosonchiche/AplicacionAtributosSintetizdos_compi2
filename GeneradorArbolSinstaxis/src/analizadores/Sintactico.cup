package analizadores; 

import arbol_sintaxis.Nodo;
import java_cup.runtime.*;

parser code 
{:

    private double resultado;
    private String datos;
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 
    /**
     * Método al que se llama cuando se identifica un error sintáctico en el que 
     * ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido."); 
    } 

    public Double getResultado() {
        return resultado;
    }
    public String getPosfijo() {
        return datos;
    }
:} 


terminal String PARIZQ,PARDER;
terminal String MAS,POR;
terminal String ENTERO;

non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal Nodo expresion;

precedence left MAS;
precedence left POR; 

start with ini; 

ini::=instrucciones;

instrucciones ::= 
   instruccion
 | error instrucciones
; 

instruccion ::= 
   expresion:arbol {: 
        resultado = arbol.getValor();
        System.out.println("El valor de la expresión es: "+arbol.getValor());
        Nodo aux = arbol;
        arbol.postorden(aux);
        datos = aux.getDatos();
        System.out.println("El valor de la expresión es: "+aux.getDatos());
        System.out.println("Para esta expresión se ha creado la imagen: "  + arbol.graficar());
   :}
;

expresion  ::=     
    expresion:a MAS        expresion:b     {: RESULT=new Nodo(a,b,Nodo.Tipo.SUMA);:}
 |  expresion:a POR        expresion:b     {: RESULT=new Nodo(a,b,Nodo.Tipo.MULTIPLICACION);:}
 |  ENTERO:a                               {:RESULT=new Nodo(Integer.parseInt(a));:}
 |  PARIZQ expresion:a PARDER              {:RESULT=a;:}
;